Sources/APIs_Sources/OsTasks.c:21:18: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-7.2]
 RunningTaskID = INVALID_TASK;
                 ^
Sources/APIs_Sources/OsTasks.c:37:17: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (Queue_Size == 0)
                ^
Sources/APIs_Sources/OsTasks.c:46:27: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
  for (int i = Queue_Size / 2 - 1; i >= 0; i--)
                          ^
Sources/APIs_Sources/OsTasks.c:62:20: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 for (int i = j; i < Queue_Size-1; i++) // Used this method instead of replacing elements, I shifted them up. It is better to preserve order of elements.
                   ^
Sources/APIs_Sources/OsTasks.c:69:26: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 for (int i = Queue_Size / 2 - 1; i >= 0; i--)
                         ^
Sources/APIs_Sources/OsTasks.c:60:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return;
  ^
Sources/APIs_Sources/OsTasks.c:56:2: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.6]
 for (j = 0; j < Queue_Size; j++)
 ^
Sources/APIs_Sources/OsTasks.c:57:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.6]
  if (id == Ready_Queue[j]->ID)
  ^
Sources/APIs_Sources/OsTasks.c:59:2: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.6]
 if (j == Queue_Size) // Added this case for if an element is not found
 ^
Headers/APIs_Headers/Libraries.h:1:0: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-21.6]
#include <stdio.h>
^
Sources/APIs_Sources/Tasks.c:4:26: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-7.2]
TaskType RunningTaskID = INVALID_TASK;
                         ^
Sources/APIs_Sources/Tasks.c:158:13: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-7.2]
  *TaskID = INVALID_TASK;
            ^
Sources/APIs_Sources/Tasks.c:14:13: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (TaskID > MAX_TASKS) //max number of active tasks
            ^
Sources/APIs_Sources/Tasks.c:16:14: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
  if (TaskID == INVALID_TASK)
             ^
Sources/APIs_Sources/Tasks.c:26:33: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if ((OsTasksPCB[TaskID]->State == SUSPENDED) && (OsTasksPCB[TaskID]->Activation_Record != 0)) // if task is suspended and activationrecord not zero
                                ^
Sources/APIs_Sources/Tasks.c:43:20: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (RunningTaskID == INVALID_TASK) //  implement RunningTaskID later
                   ^
Sources/APIs_Sources/Tasks.c:49:54: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
  if (OsTasksPCB[RunningTaskID]->Reasourses_Occupied != 0)
                                                     ^
Sources/APIs_Sources/Tasks.c:69:20: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (RunningTaskID == INVALID_TASK) //  implement RunningTaskID later
                   ^
Sources/APIs_Sources/Tasks.c:74:53: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (OsTasksPCB[RunningTaskID]->Reasourses_Occupied != 0)
                                                    ^
Sources/APIs_Sources/Tasks.c:81:13: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (TaskID > MAX_TASKS) //max number of active tasks
            ^
Sources/APIs_Sources/Tasks.c:83:14: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
  if (TaskID == INVALID_TASK)
             ^
Sources/APIs_Sources/Tasks.c:92:32: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (OsTasksPCB[TaskID]->State == SUSPENDED) // if task is suspended
                               ^
Sources/APIs_Sources/Tasks.c:109:19: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if(RunningTaskID == INVALID_TASK)
                  ^
Sources/APIs_Sources/Tasks.c:124:41: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
  if(OsTasksPCB[RunningTaskID]->F_PREEM == TASK_FULL)
                                        ^
Sources/APIs_Sources/Tasks.c:156:20: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (RunningTaskID == INVALID_TASK) //  implement RunningTaskID later
                   ^
Sources/APIs_Sources/Tasks.c:172:13: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (TaskID > MAX_TASKS)
            ^
Sources/APIs_Sources/Tasks.c:185:12: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 int l = 2 * i + 1;
           ^
Sources/APIs_Sources/Tasks.c:186:12: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 int r = 2 * i + 2;
           ^
Sources/APIs_Sources/Tasks.c:188:8: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (l < Queue_Size && Ready_Queue[l]->Priority > Ready_Queue[largest]->Priority) //Removed & because we want values not addreses
       ^
Sources/APIs_Sources/Tasks.c:190:8: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
 if (r < Queue_Size && Ready_Queue[r]->Priority > Ready_Queue[largest]->Priority) //Removed & because we want values not addreses
       ^
Sources/APIs_Sources/Tasks.c:196:29: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-10.4]
  for (int st = largest; st > i; st--)
                            ^
Sources/APIs_Sources/Tasks.c:20:4: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
   return StatusMsg;
   ^
Sources/APIs_Sources/Tasks.c:23:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return StatusMsg;
  ^
Sources/APIs_Sources/Tasks.c:30:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return StatusMsg;
  ^
Sources/APIs_Sources/Tasks.c:72:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return StatusMsg;
  ^
Sources/APIs_Sources/Tasks.c:77:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return StatusMsg;
  ^
Sources/APIs_Sources/Tasks.c:87:4: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
   return StatusMsg;
   ^
Sources/APIs_Sources/Tasks.c:90:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return StatusMsg;
  ^
Sources/APIs_Sources/Tasks.c:96:3: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-15.5]
  return StatusMsg;
  ^
Sources/APIs_Sources/Tasks.c:103:8: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
 printf("Schedule\n");
       ^
Sources/APIs_Sources/Tasks.c:111:9: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
  printf("1\n");
        ^
Sources/APIs_Sources/Tasks.c:114:9: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
  printf("1\n");
        ^
Sources/APIs_Sources/Tasks.c:116:9: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
  printf("1\n");
        ^
Sources/APIs_Sources/Tasks.c:119:9: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
  printf("1\n");
        ^
Sources/APIs_Sources/Tasks.c:120:9: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
  printf("1 DONE\n");
        ^
Sources/APIs_Sources/Tasks.c:128:11: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
    printf("2\n");
          ^
Sources/APIs_Sources/Tasks.c:147:8: style: misra violation (use --rule-texts=<file> to get proper output) [misra-c2012-17.7]
 printf("Schedule end\n");
       ^
Sources/APIs_Sources/Tasks.c:11:0: style: The function 'ActivateTask' is never used. [unusedFunction]

^
Sources/APIs_Sources/Tasks.c:63:0: style: The function 'ChainTask' is never used. [unusedFunction]

^
Sources/APIs_Sources/Tasks.c:151:0: style: The function 'GetTaskID' is never used. [unusedFunction]

^
Sources/APIs_Sources/Tasks.c:168:0: style: The function 'GetTaskState' is never used. [unusedFunction]

^
Sources/APIs_Sources/Tasks.c:101:0: style: The function 'Schedule' is never used. [unusedFunction]

^
Sources/APIs_Sources/Tasks.c:39:0: style: The function 'TerminateTask' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingIncludeSystem]

